// es6 之前的写法
function Chess(name, x, y) {
  this.name = name; // name 表示棋子的名字
  this.x = x; // 棋子的横坐标
  this.y = y; // 棋子的纵坐标
  // ...
}

Chess.width = 50; // 每一个棋子的宽度
Chess.height = 50; // 每一个棋子的高度
/*
假设，在中国象棋小游戏中有这么一个棋子类 Chess。
每一个棋子，都有它的实例成员。
  比如：名称，位置等等，对于这些成员，不同的棋子，可能会有所不同，这些属性更适合定义为实例成员。
但是，每一个棋子的尺寸都是一样的，由于所有实例的尺寸都统一大小，所以，这样的属性就适合定义为静态属性。

这么做的好处：
  1. 有效的减少了实例身上不必要的属性：棋子的宽度和高度。
  2. 不需要创建实例，就可以获取到棋子的尺寸。
*/